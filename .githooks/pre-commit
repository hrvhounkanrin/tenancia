#!/usr/bin/env bash
set -e

PYTHON_BINARY=`which python`

if [ "$PYTHON_BINARY" = "/usr/local/bin/python" ] || [ "$PYTHON_BINARY" = "/usr/bin/python" ]; then
    echo "Using system Python... Attempting to activate VirtualEnv."

    if [ -e .python-version ]; then
        VIRTUAL_ENV=$(<.python-version)
        echo "Found config for virtualenv $VIRTUAL_ENV. Attempting to activate it..."
        echo "Setting up PATH..."
        export PATH=$PATH:$HOME/bin:/usr/local/sbin:/usr/local/bin

        # Try activate the virtual environment
        if [ -x "$(command -v pyenv)" ]; then
            eval "$(pyenv init -)"
            export PYENV_VIRTUALENV_DISABLE_PROMPT=1
            echo "Activating $VIRTUAL_ENV using pyenv."
            pyenv activate $VIRTUAL_ENV
        elif [ -x "$(command -v workon)" ]; then
            echo "Activating $VIRTUAL_ENV using virtualenvwrapper."
            workon $VIRTUAL_ENV
        else
            echo "Please install either virtualenvwrapper or pyenv virtualenv."
            echo "Unable to activate virtualenv $VIRTUAL_ENV. Exiting."
            exit 1
        fi
    else
        echo "No .python-version file detected. Skipping virtualenv activation."
        exit 1
    fi

fi

if [ -n "$VIRTUAL_ENV" ]; then
    echo "Using virtualenv $VIRTUAL_ENV to run pre-commit hook."
fi

echo "Starting pre-commit hooks..."
pre-commit
